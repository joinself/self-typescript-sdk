// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class Metadata {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):Metadata {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

timestamp():flatbuffers.Long {
  return this.bb!.readInt64(this.bb_pos);
}

offset():flatbuffers.Long {
  return this.bb!.readInt64(this.bb_pos + 8);
}

static sizeOf():number {
  return 16;
}

static createMetadata(builder:flatbuffers.Builder, timestamp: flatbuffers.Long, offset: flatbuffers.Long):flatbuffers.Offset {
  builder.prep(8, 16);
  builder.writeInt64(offset);
  builder.writeInt64(timestamp);
  return builder.offset();
}

}
