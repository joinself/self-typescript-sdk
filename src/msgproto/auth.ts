// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { MsgType } from '../msgproto/msg-type';


export class Auth {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):Auth {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsAuth(bb:flatbuffers.ByteBuffer, obj?:Auth):Auth {
  return (obj || new Auth()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsAuth(bb:flatbuffers.ByteBuffer, obj?:Auth):Auth {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Auth()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

msgtype():MsgType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : MsgType.MSG;
}

token():string|null
token(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
token(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

device():string|null
device(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
device(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

offset():flatbuffers.Long {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
}

static startAuth(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addMsgtype(builder:flatbuffers.Builder, msgtype:MsgType) {
  builder.addFieldInt8(1, msgtype, MsgType.MSG);
}

static addToken(builder:flatbuffers.Builder, tokenOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, tokenOffset, 0);
}

static addDevice(builder:flatbuffers.Builder, deviceOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, deviceOffset, 0);
}

static addOffset(builder:flatbuffers.Builder, offset:flatbuffers.Long) {
  builder.addFieldInt64(4, offset, builder.createLong(0, 0));
}

static endAuth(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishAuthBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedAuthBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createAuth(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, msgtype:MsgType, tokenOffset:flatbuffers.Offset, deviceOffset:flatbuffers.Offset, offset:flatbuffers.Long):flatbuffers.Offset {
  Auth.startAuth(builder);
  Auth.addId(builder, idOffset);
  Auth.addMsgtype(builder, msgtype);
  Auth.addToken(builder, tokenOffset);
  Auth.addDevice(builder, deviceOffset);
  Auth.addOffset(builder, offset);
  return Auth.endAuth(builder);
}
}
