// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { MsgType } from '../msgproto/msg-type';


export class Status {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):Status {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsStatus(bb:flatbuffers.ByteBuffer, obj?:Status):Status {
  return (obj || new Status()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsStatus(bb:flatbuffers.ByteBuffer, obj?:Status):Status {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Status()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():string|null
id(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
id(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

msgtype():MsgType {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : MsgType.MSG;
}

recipient():string|null
recipient(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
recipient(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

online():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

lastSeen():flatbuffers.Long {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
}

static startStatus(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addMsgtype(builder:flatbuffers.Builder, msgtype:MsgType) {
  builder.addFieldInt8(1, msgtype, MsgType.MSG);
}

static addRecipient(builder:flatbuffers.Builder, recipientOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, recipientOffset, 0);
}

static addOnline(builder:flatbuffers.Builder, online:boolean) {
  builder.addFieldInt8(3, +online, +false);
}

static addLastSeen(builder:flatbuffers.Builder, lastSeen:flatbuffers.Long) {
  builder.addFieldInt64(4, lastSeen, builder.createLong(0, 0));
}

static endStatus(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishStatusBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedStatusBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createStatus(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset, msgtype:MsgType, recipientOffset:flatbuffers.Offset, online:boolean, lastSeen:flatbuffers.Long):flatbuffers.Offset {
  Status.startStatus(builder);
  Status.addId(builder, idOffset);
  Status.addMsgtype(builder, msgtype);
  Status.addRecipient(builder, recipientOffset);
  Status.addOnline(builder, online);
  Status.addLastSeen(builder, lastSeen);
  return Status.endStatus(builder);
}
}
