default:
  image: ubuntu:focal-20210217

stages:
  - pre-build
  - build
  - test
  - release
  - publish

.license-check: &license-check |
  source ~/.profile
  git clone https://${GITHUB_TOKEN}:@github.com/aldgate-ventures/license-finder.git
  license_finder --decisions_file ./license-finder/dependency_decisions.yml

.setup: &setup |
  export DEBIAN_FRONTEND=noninteractive
  apt-get update
  apt-get -y install curl libsodium-dev npm
  tmpdir=$(mktemp -d)
  curl https://download.joinself.com/olm/libself-olm_0.1.17_amd64.deb -o ${tmpdir}/libself-olm_0.1.17_amd64.deb
  curl https://download.joinself.com/omemo/libself-omemo_0.1.3_amd64.deb -o ${tmpdir}/libself-omemo_0.1.3_amd64.deb
  apt-get -y install ${tmpdir}/libself-olm_0.1.17_amd64.deb
  apt-get -y install ${tmpdir}/libself-omemo_0.1.3_amd64.deb

.build: &build |
  echo "building"
  npm install

.test: &test |
  npm install
  npm test

.git-release: &git-release |
  version=$(grep 'VERSION = ' ./lib/version.rb | tr -d '"' | awk '{print $3}')
  current_git_tag=$(git ls-remote -q --tags https://github.com/joinself/self-ruby-sdk | sort -t / -k 3 -V | grep -v '{}' | tail -n 1 | awk -F / '{print $3}')
  subject=$(git log -n 1 --format=%s)
  body=$(git log -n 1 --format=%b | grep -E '^\*|^-' | sed 's/^*/-/g') || true

  if [[ -z ${body} ]]; then
    release_notes="- ${subject}"
  else
    release_notes="${body}"
  fi

  if [[ "${version}" != "${current_git_tag}" ]]; then
    git remote set-url origin https://github.com/joinself/${CI_PROJECT_NAME}
    git tag -a ${version} -m "${version}"
    git push origin ${version}
    hub release create -m "${version}" -m "${release_notes}" ${version}
  else
    echo "Version hasn't changed. Nothing to do here."
  fi

.slack-notify: &slack-notify |
  if [[ -z ${body} ]]; then
    slack chat send "New release <https://github.com/joinself/${CI_PROJECT_NAME}|${CI_PROJECT_NAME}> <https://github.com/joinself/${CI_PROJECT_NAME}/commits/${version}|${version}>\n\n- ${subject}" '#ci'
  else
    slack chat send "New release <https://github.com/joinself/${CI_PROJECT_NAME}|${CI_PROJECT_NAME}> <https://github.com/joinself/${CI_PROJECT_NAME}/commits/${version}|${version}>\n\n${body}" '#ci'
  fi

.publish: &publish |
  version=$(grep 'VERSION = ' ./lib/version.rb | tr -d '"' | awk '{print $3}')

  if ! gem search -a selfsdk | grep $version; then
    gem push selfsdk-${version}.gem
  else
    echo "Gem version already exists. Nothing to do here."
  fi

before_script:
  - apt-get update
  - apt-get -y install git
  - export SCRIPTS_DIR=$(mktemp -d)
  - git clone -q --depth 1 "${SCRIPTS_REPO}" "${SCRIPTS_DIR}"

license-check:
  stage: pre-build
  image: licensefinder/license_finder
  script:
    - ${SCRIPTS_DIR}/git-setup
    - *license-check
  allow_failure: true
  only:
    - branches

build:
  stage: build
  script:
    - *setup
    - *build
  only:
    - branches

test:
  stage: test
  script:
    - *setup
    - *test
  only:
    - branches

release:
  stage: release
  image: eu.gcr.io/principal-oxide-204416/deploy
  script:
    - exit 0
    - ${SCRIPTS_DIR}/git-setup
    - *git-release
    - *slack-notify
  only:
    - master

npm:
  stage: publish
  script:
    - exit 0
    - ${SCRIPTS_DIR}/npm-setup
    - *publish
  only:
    - master
