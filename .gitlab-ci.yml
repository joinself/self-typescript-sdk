workflow:
  rules:
    - if: $CI_COMMIT_BRANCH

stages:
  - build
  - release
  - publish

# .license-check: &license-check |
#   npm install
#   source ~/.profile
#   git clone https://${GITHUB_TOKEN}:@github.com/aldgate-ventures/license-finder.git
#   license_finder --decisions_file ./license-finder/dependency_decisions.yml

.setup-environment: &setup-environment |
  export DEBIAN_FRONTEND=noninteractive
  apt-get update
  apt-get -y install curl libsodium-dev npm
  tmpdir=$(mktemp -d)
  curl https://download.joinself.com/olm/libself-olm_0.1.17_amd64.deb -o ${tmpdir}/libself-olm_0.1.17_amd64.deb
  curl https://download.joinself.com/omemo/libself-omemo_0.1.3_amd64.deb -o ${tmpdir}/libself-omemo_0.1.3_amd64.deb
  apt-get -y install ${tmpdir}/libself-olm_0.1.17_amd64.deb
  apt-get -y install ${tmpdir}/libself-omemo_0.1.3_amd64.deb

.build: &build |
  npm install
  npm run test
  npm run build
  tar -czf artefacts.tar.gz dist docs node_modules

.git-release: &git-release |
  version=$(grep '"version":' package.json | awk '{print $2}' | tr -d '",')
  current_git_tag=$(git ls-remote -q --tags https://github.com/joinself/self-typescript-sdk | sort -t / -k 3 -V | grep -v '{}' | tail -n 1 | awk -F / '{print $3}')
  subject=$(git log -n 1 --format=%s)
  body=$(git log -n 1 --format=%b | grep -E '^\*|^-' | sed 's/^*/-/g') || true

  if [[ -z ${body} ]]; then
    release_notes="- ${subject}"
  else
    release_notes="${body}"
  fi

  if [[ "${version}" != "${current_git_tag}" ]]; then
    git remote set-url origin https://github.com/joinself/${CI_PROJECT_NAME}
    git tag -a ${version} -m "${version}"
    git push origin ${version}
    gh release create "${version}" --notes "${release_notes}"
  else
    echo "Version hasn't changed. Nothing to do here."
  fi

.publish: &publish |
  apt-get -y install python3

  version=$(grep '"version":' package.json | awk '{print $2}' | tr -d '",')

  if ! npm view self-sdk versions | grep $version; then
    tar -zxf artefacts.tar.gz
    npm publish --access public
    ${SCRIPTS_DIR}/slack-release-notification -n joinself -v ${version}
  else
    echo "Package version already exists. Nothing to do here."
  fi

before_script:
  - apt-get update
  - apt-get -y install git
  - export SCRIPTS_DIR=$(mktemp -d)
  - git clone -q --depth 1 "${SCRIPTS_REPO}" "${SCRIPTS_DIR}"

license-check:
  stage: build
  image: licensefinder/license_finder
  script:
    #- ${SCRIPTS_DIR}/git-setup
    - ${SCRIPTS_DIR}/license-check
  allow_failure: true

secrets-check:
  stage: build
  image:
    name: zricethezav/gitleaks:v8.2.4
    entrypoint: [""]
  before_script:
    - echo "skip"
  script:
    - export SCRIPTS_DIR=$(mktemp -d)
    - git clone -q --depth 1 "${SCRIPTS_REPO}" "${SCRIPTS_DIR}"
    - ${SCRIPTS_DIR}/git-secret-scan
  allow_failure: true

build:
  stage: build
  image: ubuntu:focal-20210217
  script:
    - *setup-environment
    - *build
  artifacts:
    paths:
      - artefacts.tar.gz

release:
  stage: release
  image: eu.gcr.io/principal-oxide-204416/tools
  script:
    - ${SCRIPTS_DIR}/git-setup
    - *git-release
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

npm:
  stage: publish
  image: ubuntu:focal-20210217
  script:
    - *setup-environment
    - ${SCRIPTS_DIR}/npm-setup
    - *publish
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
